 FAIL  problem-a/problem.spec.js
  Used test-driven development
    ✕ Used Jest to pre-test code, saved in `pretest.txt` (1 ms)
  Source code is valid
    ✓ HTML validates without errors (11 ms)
    ✓ CSS validates without errors (232 ms)
  Has required HTML
    ✓ Specifies charset (2 ms)
    ✓ Includes page title (1 ms)
    ✓ Includes author metadata (1 ms)
    ✓ Has a top-level heading
    ✓ Has an image (1 ms)
    ✓ Includes a paragraph (1 ms)
    ✓ Includes a hyperlink in the paragraph (1 ms)
    ✓ Includes a list
    ✓ List has at least 3 items (1 ms)
  Has required CSS
    ✓ Links in local stylesheet (1 ms)
    ✓ Body has default font size (1 ms)
    ✓ Body has default font family
    ✕ Paragraphs have specified line height (3 ms)
    ✕ Images have constrained height (1 ms)
    ✕ Important list item is colored (1 ms)

  ● Used test-driven development › Used Jest to pre-test code, saved in `pretest.txt`

    ENOENT: no such file or directory, open '/Users/jiufengnianjian/Desktop/problem-01-yichl42/problem-a/pretest.txt'

      17 |   test('Used Jest to pre-test code, saved in `pretest.txt`', () => {
      18 |     const path = __dirname + '/pretest.txt'
    > 19 |     const pretest = fs.readFileSync(path, 'utf-8');
         |                        ^
      20 |     expect(pretest).toMatch(/FAIL +(problem-a)?\/problem\.spec\.js/)
      21 |   })
      22 | })

      at Object.readFileSync (problem-a/problem.spec.js:19:24)

  ● Has required CSS › Paragraphs have specified line height

    expect(received).toEqual(expected) // deep equality

    Expected: "1.5"
    Received: "1.6"

      136 |   test('Paragraphs have specified line height', () => {
      137 |     let p = $('p')
    > 138 |     expect(p.css('line-height') ).toEqual('1.5');
          |                                   ^
      139 |     expect(p.attr('id')).toBe(undefined); //shouldn't have id
      140 |     expect(p.attr('class')).toBe(undefined); //shouldn't have class
      141 |   })

      at Object.toEqual (problem-a/problem.spec.js:138:35)

  ● Has required CSS › Images have constrained height

    expect(received).toEqual(expected) // deep equality

    Expected: "400px"
    Received: "350px"

      142 |
      143 |   test('Images have constrained height', () => {
    > 144 |     expect($('img').css('max-height')).toEqual('400px');
          |                                        ^
      145 |   })
      146 |
      147 |   test('Important list item is colored', () => {

      at Object.toEqual (problem-a/problem.spec.js:144:40)

  ● Has required CSS › Important list item is colored

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 5

      147 |   test('Important list item is colored', () => {
      148 |     let li = $('li[class]')
    > 149 |     expect(li.length).toBe(1); //only one item has class
          |                       ^
      150 |     expect(li.css('color')).toBeDefined(); //that item has a color
      151 |   });
      152 | })

      at Object.toBe (problem-a/problem.spec.js:149:23)

Test Suites: 1 failed, 1 total
Tests:       4 failed, 14 passed, 18 total
Snapshots:   0 total
Time:        1.926 s
Ran all test suites matching /problem-a/i.